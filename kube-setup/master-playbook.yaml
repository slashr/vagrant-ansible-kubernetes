- hosts: master
  become: yes
  gather_facts: true
  tasks:
    - name: create the 'ubuntu' user
      user: name=ubuntu append=yes state=present createhome=yes shell=/bin/bash

    - name: 'Install docker and role dependencies'
      become: yes
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'software-properties-common', 'cron']
        state: present
        install_recommends: false

    - name: install Docker
      apt:
        name: docker.io
        state: present
        update_cache: true

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
 
    - name: add Kubernetes APT repository
      apt_repository:
       repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
       state: present
       filename: 'kubernetes'
 
    - name: install kubelet
      apt:
        name: kubelet=1.14.0-00
        state: present
        update_cache: true
 
    - name: install kubeadm
      apt:
        name: kubeadm=1.14.0-00
        state: present
 
    - name: install kubectl
      apt:
        name: kubectl=1.14.0-00
        state: present
        force: yes

    - name: 'Configure cgroup driver used by kubelet on Master node'
      become: yes
      replace:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        regexp: 'cgroup-driver=systemd'
        replace: 'cgroup-driver="cgroupfs"'
        backup: yes

    - name: 'Reload configs and restart kubelet'
      become: yes
      systemd:
        state: restarted
        daemon_reload: yes
        name: kubelet

    - name: Resetting kubeadm
      shell: kubeadm reset -f
      register: output
      
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: create .kube directory
      become: yes
      become_user: ubuntu
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu

    - name: install Pod network
      become: yes
      become_user: ubuntu
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt

    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"
